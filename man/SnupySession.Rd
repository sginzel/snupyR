% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/snupy_session.R
\docType{class}
\name{SnupySession}
\alias{SnupySession}
\alias{session}
\title{Get a SnupySession object}
\format{\code{\link{R6Class}} object.}
\usage{
SnupySession$new(file.path = NULL)
}
\arguments{
\item{filepath}{a path to a .r file that contains the config}
}
\value{
Object of R6 class which hold connection information
}
\description{
\code{SnupySession} generates a S6 class
}
\details{
SnupySession objects are used to establish a connection to a SNuPy server through HTTP(S).
An important feature of session is their cache a \code{\link{SnupyMemory}} object.
The HTTP authentification and proxy password are encrypted asymetrically, so that storing a session object through save(...) will not expose the password.
\describe{
\item{URL}{SNUPY url}
\item{USER}{snupy user}
\item{PASS}{optional password for USER. If null the password is asked for interactively (recommended)}
\item{KEYFILE}{optional location of a .pem file used to encrypt PASS and PROXYPASS. See Details.}
\item{CACHEDIR}{path to cache dir (/tmp)}
\item{PROXY}{proxy host}
\item{PROXYPORT}{proxy port}
\item{PROXYUSER}{proxy user}
\item{PROXYPASS}{Proxy password}
\item{PROXYAUTH}{Curl proxy authentifcation method}
\item{COMPRESSION}{logical value if compression should be used for HTTP transfers}
\item{DEBUG}{logical value if debug information should be displayed.}
\item{SHOWSQL}{logical value if SQL commands should be printed in debug mode}
\item{SHOWPROGRESS}{logical value if progress on SnupyCollection methods should be displayed (experimental).}
}
}
\section{Methods}{

These methods are accessible:

\describe{
\item{\code{load.records()}}{Caches all \code{\link{SnupyData}} objects.}
\item{\code{cache(FUN, ...)}}{cache the call to FUN(...)}
\item{\code{get_proxy_password()}}{returns proxy password in plain text, use with caution.}
\item{\code{get_password()}}{returns password in plain text, use with caution.}
\item{\code{reset_password()}}{resets the current password and more importantly re-encrypts it with the current key. Usefull when transfering session objects between machines.}
}
}

\section{Class-Methods}{

These methods are accessible:

\describe{
\item{\code{SnupySession$encrypt(txt, pubkey = my_pubkey())}}{Is used to encrypt short texts (n<245), such as passwords}
\item{\code{SnupySession$decrypt(secret, key = my_key())}}{Used to decrypt texts.}
\item{\code{SnupySession$encrypt.object(obj, file.path = NULL, pubkey = my_pubkey())}}{Encrypts the serialized output of an object applying RSA cypher. The RSA key is encrypted with AES and stored alongside. If file.path is not NULL the result is stored in a file and the path to the file is returned.}
\item{\code{SnupySession$decrypt.object(enc.obj = NULL, file.path = NULL, key = my_key())}}{Decrypts cyphered objects.}
}
}

\examples{
################
# snupy_config.R
################
URL = "http://localhost:3000"
USER   = NULL
PASS   = NULL
KEYFILE   = NULL
CACHEDIR   = "~/tmp"
PROXY = NULL
PROXYPORT = NULL
PROXYUSER = NULL
PROXYPASS = NULL
PROXYAUTH = NULL
COMPRESSION = FALSE
DEBUG	 = TRUE
SHOWPROGRESS = TRUE
SHOWSQL  = FALSE
################
# EOF ##########
################
ssion <- SnupySession$new('snupy_config.R')
snupy.query("SHOW TABLES", ssion)
}
\seealso{
\code{\link{SnupyMemory}}, \code{\link{snupy.query}}, \code{\link{snupy.request}}
}
\author{
Sebastian Ginzel <sginze2s@inf.h-brs.de>
}
\keyword{datasets}
